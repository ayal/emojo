{"version":3,"sources":["App.js","index.js"],"names":["uniq","arr","filter","x","index","indexOf","rint","min","max","Math","ceil","floor","random","getQ","p","URLSearchParams","window","location","search","get","App","keys","useMemo","Object","words","qidx","useState","Number","length","idx","setIdx","useEffect","v","urlParams","set","history","pushState","pathname","setQ","onpopstate","e","ref","useRef","answers","setAnswers","guesses","setGuesses","emoji","legitWords","flatMap","split","map","y","toLowerCase","answerWords","guess","guessWord","current","value","trim","ok","partial","sWord","prev","className","style","fontSize","onKeyDown","key","onClick","background","role","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d69db56.chunk.js","sourcesContent":["import { useMemo, useRef, useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport words from \"./words.json\";\n\n\nconst uniq = (arr) => arr.filter(function (x, index) {\n  return arr.indexOf(x) === index;\n});\n\nfunction rint(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getQ = (p) => {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(p);\n}\n\nconst setQ = (p, v) => {\n  const urlParams = new URLSearchParams(window.location.search);\n  if (urlParams.get(p) !== v) {\n    urlParams.set(p, v);\n    history.pushState({}, '', `${location.pathname}?${urlParams}`)\n  }\n}\n\n\nexport default function App() {\n  const keys = useMemo(() => Object.keys(words), [words]);\n  const qidx = getQ('idx');\n  const [idx, setIdx] = useState(qidx && Number(qidx) ? Number(qidx) : rint(0, keys.length - 1));\n  useEffect(() => {\n    setQ('idx', idx);\n  }, [idx])\n  useEffect(() => {\n    window.onpopstate = function (e) {\n      const qidx = getQ('idx');\n      if (qidx !== idx) {\n        setIdx(qidx);\n      }\n    };\n  }, [])\n  const ref = useRef();\n  const [answers, setAnswers] = useState();\n  const [guesses, setGuesses] = useState([]);\n\n\n\n  const emoji = keys[idx];\n  const legitWords = uniq(words[emoji].flatMap((x) =>\n    [...x.split(\" \").map((y) => y.toLowerCase()), x]\n  ));\n  const answerWords = uniq(words[emoji].flatMap((x) =>\n    [...x.split(\" \").map((y) => y.toLowerCase())]\n  ));\n\n  const guess = (e) => {\n    const guessWord = ref.current.value.trim();\n    ref.current.value = \"\";\n\n    if (!guessWord) {\n      return;\n    }\n\n    let ok = false;\n    let partial = false;\n    for (const sWord of legitWords) {\n      if (sWord === guessWord.toLowerCase()) {\n        ok = true;\n        partial = false;\n        break;\n      }\n      else if (sWord.indexOf(guessWord) === 0) {\n        ok = true;\n        partial = true;\n      }\n    }\n    setGuesses((prev) => [...prev, { ok, guessWord, partial }]);\n  };\n  return (\n\n    <div className=\"app\">\n      <div style={{ fontSize: 60 }}>{emoji}</div>\n      <div className=\"input-button\">\n        <input ref={ref} onKeyDown={(e) => e.key === 'Enter' && guess()} />\n        <button onClick={(e) => guess()}>Guess Word</button>\n      </div>\n      <div className=\"guess-list\">\n        {guesses.map(({ ok, partial, guessWord }) => {\n          return (\n            <span key={guessWord} className=\"guess\" style={{ background: ok ? partial ? \"#FCEAAF\" : \"#7dda9a\" : \"#F598AA\" }}>\n              {guessWord}\n            </span>\n          );\n        })}\n      </div>\n      <button role=\"button\" className=\"answers-button secondary\" onClick={setAnswers}>Show Answers</button>\n      <div className=\"answers\">{answers ? answerWords.map(x => <span key={x} className=\"answer\">{x}</span>) : null}</div>\n      <button role=\"button\" className=\"new-game-button secondary\" onClick={() => {\n        setGuesses([]);\n        setAnswers(false);\n        setIdx(rint(0, keys.length - 1));\n      }}>New Word</button>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}